------------------------------------------------------------------------------------------------------------------MainActivity
   private fun loadJsonAndSaveItIntoWidgets() {
        // Load the JSON file from the assets folder
        val jsonString: String = loadJSONFromAsset("application_primary_texts.json")

        // Parse the JSON string into a JSONObject
        val jsonObject = JSONObject(jsonString)

        // Access the values from the JSON object
        val aboutTitle = jsonObject.getJSONObject("about").getString("aboutTitle_tv")
        val aboutText = jsonObject.getJSONObject("about").getString("aboutText_tv")
        Log.d("application primary texts", "loadJsonAndSaveItIntoWidgets: $aboutTitle")

        val settingsTitle = jsonObject.getJSONObject("settings").getString("settingTitle_tv")
        val settingsButton1 = jsonObject.getJSONObject("settings").getString("settings_btn_back")

        val mainMenuTitle = jsonObject.getJSONObject("mainMenu").getString("menuTitle_tv")
        val mainMenuNewGame = jsonObject.getJSONObject("mainMenu").getString("newGame_btn")
        val mainMenuContinue = jsonObject.getJSONObject("mainMenu").getString("continue_btn")
        val mainMenuSettings = jsonObject.getJSONObject("mainMenu").getString("settings_btn")
        val mainMenuAbout = jsonObject.getJSONObject("mainMenu").getString("about_btn")
        val mainMenuExitGame = jsonObject.getJSONObject("mainMenu").getString("exitGame_btn")
    }

    private fun loadJSONFromAsset(filename: String): String {
        return try {
            val inputStream = assets.open(filename)
            val size = inputStream.available()
            val buffer = ByteArray(size)
            inputStream.read(buffer)
            inputStream.close()
            buffer.toString(Charset.defaultCharset())
        } catch (ex: IOException) {
            ex.printStackTrace()
            "{}" // Return an empty JSON object in case of an error
        }
    }
-----------------------------------------------------------------------------------------------------------NewGameActivity
    private fun loadJsonAndSaveItIntoWidgets() {
        // Load the JSON file from the assets folder
        val jsonString: String = loadJSONFromAsset("player_data.json")

        // Parse the JSON string into a JSONObject
        val jsonObject = JSONObject(jsonString)

        // Access the values from the JSON object
        val aboutTitle = jsonObject.getJSONObject("player_info").getString("player_name")
        val aboutText = jsonObject.getJSONObject("player_info").getString("race")
    }

        private fun loadJsonAndSaveItIntoWidgets() {
            // Load the JSON file from the assets folder
            val jsonString: String = loadJSONFromAsset("player_data.json")

            // Parse the JSON string into a JSONObject
            val jsonObject = JSONObject(jsonString)

            // Access the values from the JSON object
            val aboutTitle = jsonObject.getJSONObject("player_info").getString("player_name")
            val aboutText = jsonObject.getJSONObject("player_info").getString("race")
        }

        private fun loadJSONFromAsset(filename: String): String {
            return try {
                val inputStream = assets.open(filename)
                val size = inputStream.available()
                val buffer = ByteArray(size)
                inputStream.read(buffer)
                inputStream.close()
                buffer.toString(Charset.defaultCharset())
            } catch (ex: IOException) {
                ex.printStackTrace()
                "{}" // Return an empty JSON object in case of an error
            }
        }